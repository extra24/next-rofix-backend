version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: ap-northeast-2
    ACCOUNT_ID: 077672914621
    IMAGE_REPO_NAME: fitspot-app
    CODEBUILD_RESOLVED_SOURCE_VERSION: latest
    CONTAINER_NAME: app1
    GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m"

phases:
  pre_build:
    commands:
      - set -x
      - echo Logging in to Amazon ECR...
      - aws --version
      # ECR 로그인
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
  build:
    commands:
      - echo Build started on `date`
      - echo Building the application with Gradle...
      - ./gradlew clean build -x test
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files: imagedefinitions.json


cache:
  paths:
    - '/root/.gradle/**/*'